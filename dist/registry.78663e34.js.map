{"version":3,"sources":["registry.js"],"names":["HelloWorld","_HTMLElement","_this","_classCallCheck","_callSuper","shadowRoot","attachShadow","mode","appendChild","document","getElementById","content","cloneNode","_inherits","_createClass","key","value","connectedCallback","console","log","disconnectedCallback","adoptedCallback","attributeChangedCallback","say","something","_wrapNativeSuper","HTMLElement","window","customElements","define"],"mappings":";;;;;;;;;;;;;;;;IAAMA,UAAU,0BAAAC,YAAA;EACZ,SAAAD,WAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,UAAA;IACVE,KAAA,GAAAE,UAAA,OAAAJ,UAAA;IACA;IACA,IAAMK,UAAU,GAAGH,KAAA,CAAKI,YAAY,CAAC;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;;IAEtD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAF,UAAU,CAACG,WAAW,CAACC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAAC,CAACC,OAAO,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;IAAC,OAAAV,KAAA;EAClF;EACA;EAAAW,SAAA,CAAAb,UAAA,EAAAC,YAAA;EAAA,OAAAa,YAAA,CAAAd,UAAA;IAAAe,GAAA;IAAAC,KAAA,EACA,SAAAC,iBAAiBA,CAAA,EAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACvB;IACA;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EACA,SAAAI,oBAAoBA,CAAA,EAAG;MACnBF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzB;IACA;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EACA,SAAAK,eAAeA,CAAA,EAAG,CAElB;IACA;EAAA;IAAAN,GAAA;IAAAC,KAAA,EACA,SAAAM,wBAAwBA,CAAA,EAAG;MACvBJ,OAAO,CAACC,GAAG,CAAC,SAAU,CAAC;IAC3B;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAO,GAAGA,CAACC,SAAS,EAAE;MACXN,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C;EAAC;AAAA,eAAAM,gBAAA,CAtDoBC,WAAW;AAyDpCC,MAAM,CAACC,cAAc,CAACC,MAAM,CAAC,aAAa,EAAE7B,UAAU,CAAC","file":"registry.78663e34.js","sourceRoot":"..\\customElement\\test","sourcesContent":["class HelloWorld extends HTMLElement {\r\n    constructor() {\r\n        super()\r\n        // 不开启 shadow hostr\r\n        const shadowRoot = this.attachShadow({ mode: 'open' })\r\n\r\n        // const div = document.createElement('div')\r\n        // const style = document.createElement('style')\r\n        // style.innerHTML = `h1 {\r\n        //                     display: block;\r\n        //                     padding: 10px;\r\n        //                     background-color: #eee;\r\n        //                 }`\r\n        // div.innerHTML = `\r\n        //             <h1>Hello World! 自定义组件内部</h1>\r\n        //         `;\r\n        // this.appendChild(style);\r\n        // this.appendChild(div);\r\n        // this.shadowRoot.innerHTML = `\r\n        // <style>\r\n        // :host{\r\n        // display: block;\r\n        // padding: 10px;\r\n        // background-color: #eee;\r\n        // }\r\n        // h1{\r\n        // color: red;\r\n        // }\r\n        // </style>\r\n        // <h1>\r\n        // hello world！\r\n        // </h1>\r\n        // `\r\n        shadowRoot.appendChild(document.getElementById('hw').content.cloneNode(true));\r\n    }\r\n    // 1. 当自定义元素首次被渲染到文档时间调用\r\n    connectedCallback() {\r\n        console.log('1111')\r\n    }\r\n    //  2. 当自定义元素首次被渲染到文档时间调用\r\n    disconnectedCallback() {\r\n        console.log('baybay')\r\n    }\r\n    // 3. 当自定义元素被移动到新的文档时调用\r\n    adoptedCallback() {\r\n\r\n    }\r\n    // 4. 当自定义元素的属性更改时调用\r\n    attributeChangedCallback() {\r\n        console.log('changed',)\r\n    }\r\n\r\n    say(something) {\r\n        console.log('This is hello-world tag.')\r\n    }\r\n}\r\n\r\nwindow.customElements.define('hello-world', HelloWorld)"]}